%header#page_header.page_header

	%h1.visuallyhidden Sandwich Video

	%nav#nav_primary.nav_primary

		%a#nav_toggle.nav_toggle{:href => "#", :title => "Toggle Menu"}
			.nav_icon
				.nav_line.line-1
					.line_bg
				.nav_line.line-2
					.line_bg
				.nav_line.line-3
					.line_bg

		.wrap_nav
			%ul
				%li
					%a.color_random{:href => "projects.html", :title => "Projects"} Projects
				%li
					%a.color_random{:href => "people.html", :title => "People"} People
				%li
					%a.color_random{:href => "#", :title => "How it Works"} How it Works
				%li
					%a.color_random{:href => "press.html", :title => "Press"} Press
				%li
					%a.color_random{:href => "#", :title => "Contact"} Contact
				%li#nav_twitter.nav_twitter
					%a.color_random{:href => "https://twitter.com/sandwich", :title => "Follow @sandwich", :target => "_blank"} @sandwich
				- if locals == 'home'
					%li#nav_search.nav_search
						%form#search_projects{:action => "/search", :method => "get", :role => "search"}
							%input#filter_search{:type => "text", :name => "search", :value => "", :autocomplete => "off", :placeholder => "Find a specific video", :required => true}
							-# %input.search_submit{:type => "submit", :value => "Search"}
							-# not using .wrap_svg because of pointer-event support
							= Haml::Engine.new(File.read("dev/haml/partials/_svg_search.haml")).render


	-# determine which video SVG to use based on locals variable
	- if locals == 'home' || locals == 'projects'
		- classVideoSVG = 'vhs'
	- elsif locals == 'people'
		- classVideoSVG = 'record'
	- else
		- classVideoSVG = 'rainbow'

	-# only output a div on the home page,
	-# use a <a> for everything else
	-# - if locals == 'home'
		-# - tagLogoMain = 'div.logo_main'
	-# - else
		-# - tagLogoMain = 'a.logo_main'


	-# if text content is required, use:
	-# haml_tag tagLogoMain, "Hello There!"

	-# could not figure out how to pass attributes conditionally... so the <div> will contain a :href and :title as well :(
	-# - haml_tag tagLogoMain, href: "index.html", title: "Back To Home" do

	-# DISCOVERED THAT WEBKIT CANNOT ANIMATE SVGs WITHIN A <a> TAG, SO I HAVE COMMENTED OUT MY LOGIC AND DONE THIS THE STUPID WAY

	.logo_main
		- if locals != 'home'
			%a.fix_webkit-svg{:href => "index.html", title: "Back To Home"}
		.wrap_svg.wrap_logo-sandwich
			%svg.logo_sandwich{:viewBox => "0 0 346 48"}
				%use{"xlink:href" => "#logo_sandwich"}
		%div{:class => "wrap_svg wrap_logo-video wrap_video-#{classVideoSVG}"}
			= Haml::Engine.new(File.read("dev/haml/partials/_svg_video-#{classVideoSVG}.haml")).render

	- taglineHome     = 'We make videos and TV commercials. Here are some below.'
	- viewboxHome     = '0 0 303 31'
	- taglineProjects = 'So many projects.'
	- viewboxProjects = '0 0 153 11'
	- taglinePeople   = 'These are the core people who make Sandwich Video what it is.'
	- viewboxPeople   = '0 0 302 31'
	- taglinePress    = 'Catch up on how we\'re doing here at Sandwich.'
	- viewboxPress    = '0 0 228 31'

	-# determine which tagline markup to use based on locals variable
	- arrTaglines = { 'home' => [taglineHome, viewboxHome], 'projects' => [taglineProjects, viewboxProjects], 'people' => [taglinePeople, viewboxPeople], 'press' => [taglinePress, viewboxPress] }

	%div{:class => "wrap_svg wrap_tagline wrap_tagline-#{locals}"}
		%h2.visuallyhidden #{arrTaglines[locals][0]}
		%svg.tagline_home{:viewBox => "#{arrTaglines[locals][1]}"}
			%use{"xlink:href" => "#tagline_#{locals}"}