// ==|== base =================================================================
// ============================================================================

// General Styles
// ----------------------------------------------------------------------------
// --- SVGs --- \\
a.wrap_svg {
	display: block;
}
.wrap_svg svg {
	width: 100%;
	height: 100%;
}
svg {
	transition: fill 260ms ease-in-out;
	path {
		transition: stroke 260ms ease-in-out;
	}
	// &.svg_inline { display: inline; }
}
// --- Responsive Video Embeds --- \\
.wrap_video {
	position: relative;
	padding-bottom: 56.271981%; // aspect ratio percentage : [853:480 = 56.271981%] ... [16:9 = 56.25%]
	// padding-top: 2.5rem;
	height: 0;
	iframe {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
	}
}
// --- Helper Classes --- \\
.clearfix {
	&::before,
	&::after {
		content: " ";
		display: table;
	}
	&::after {
		clear: both;
	}
}
.visuallyhidden {
	clip: rect(0 0 0 0);
	overflow: hidden;
	position: absolute;
	margin: -0.1rem;
	padding: 0;
	width: 0.1rem;
	height: 0.1rem;
	border: 0;
}
.truncate {
	overflow: hidden;
	padding-bottom: 0.1em;
	width: 100%;
	text-overflow: ellipsis;
	white-space: nowrap;
}

// Variables
// ----------------------------------------------------------------------------
$hsl_bone:   hsl(180, 50%,  99%);
$hsl_ash:    hsl(198, 5%,   60%);
$hsl_red:    hsl(2,   80%,  56%);
$hsl_orange: hsl(25, 100%,  58%);
$hsl_yellow: hsl(52,  88%,  48%);
$hsl_aqua:   hsl(171, 81%,  45%);
$hsl_cyan:   hsl(194, 76%,  51%);
$hsl_navy:   hsl(212, 59%,  22%);
// HSL Shades
$hsl_L0:     hsl(0,    0%,   0%);
$hsl_L60:    hsl(0,    0%,  60%);
$hsl_L72:    hsl(0,    0%,  72%);
$hsl_L100:   hsl(0,    0%, 100%);
// HSLa Variations
$hsla_bone-L98: hsla(180, 50%, 99%, 0.98);
$hsla_cyan-L96: hsla(194, 76%, 51%, 0.96);
// custom easing
$easeBounce:    cubic-bezier(0.215,0.610,0.355,1);
$easeInOutCirc: cubic-bezier(0.785,0.135,0.150,0.860);
$easeInOutBack: cubic-bezier(0.680,-0.400,0.265,1.400); // was: -0.550 & 1.550 ... reduced because of :focus input overlap
// arrays (lists)
$arrColorNames: "red", "orange", "yellow", "aqua", "cyan";
$arrColorValues: $hsl_red, $hsl_orange, $hsl_yellow, $hsl_aqua, $hsl_cyan;

// Mixins
// ----------------------------------------------------------------------------
@mixin container($max-width: none) {
	@if $max-width == "reset" {
		margin-left: 0;
		margin-right: 0;
		max-width: none;
	} @else {
		margin-left: auto;
		margin-right: auto;
		max-width: ($max-width / 10) + rem;
	}
}
@mixin pos_cover($pos: static, $index: 1) {
	z-index: $index;
	@if $pos == "reset" {
		position: static;
		top: auto;
		right: auto;
		bottom: auto;
		left: auto;
		margin: 0;
	} @else {
		position: $pos;
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
		margin: auto;
	}
}
@mixin flex_center() {
	display: flex;
	align-items: center;
	justify-content: center;
	flex-direction: column;
	text-align: center;
}
@mixin toggle_visibility($state) {
	@if ($state == "off") or ($state == "none") or ($state == "hide") or ($state == "hidden") {
		opacity: 0;
		visibility: hidden;
	} @else {
		opacity: 1;
		visibility: visible;
	}
}

// Animations
// ----------------------------------------------------------------------------
@keyframes animSVGPath {
	to { opacity: 1; stroke-dashoffset: 0; }
}
@keyframes anim360 {
	to { transform: rotate(360deg); }
}

@keyframes animFadeIn {
	  0% { opacity: 0; }
	100% { opacity: 1; }
}
/*
@keyframes animFadeOut {
	  0% { opacity: 1; }
	100% { opacity: 0; }
}
*/
@keyframes animHide {
	0%   { opacity: 1; left: 0; }
	99%  { opacity: 0; left: 0; }
	100% { opacity: 0; left: -200%; }
}


@keyframes animSlideIn_left {
	  0% { transform: translate3d(-100%,0,0); }
	100% { transform: translate3d(0%,0,0);    }
}
@keyframes animSlideIn_right {
	  0% { transform: translate3d(100%,0,0); }
	100% { transform: translate3d(0%,0,0);   }
}
@keyframes animBounceUp {
	  0% { transform: translate3d(0,4.8rem,0);  }
	 60% { transform: translate3d(0,-1.2rem,0); }
	100% { transform: translate3d(0,0,0);       }
}

@keyframes animRbow_color {
	  0% { color: $hsl_red;    }
	 20% { color: $hsl_orange; }
	 40% { color: $hsl_yellow; }
	 60% { color: $hsl_aqua;   }
	 80% { color: $hsl_cyan;   }
	100% { color: $hsl_red;    }
}
@keyframes animRbow_fill {
	  0% { fill: $hsl_red;    }
	 20% { fill: $hsl_orange; }
	 40% { fill: $hsl_yellow; }
	 60% { fill: $hsl_aqua;   }
	 80% { fill: $hsl_cyan;   }
	100% { fill: $hsl_red;    }
}

@keyframes animRbow2Navy_bg {
	  0% { background-color: $hsl_red;    }
	 20% { background-color: $hsl_orange; }
	 40% { background-color: $hsl_yellow; }
	 60% { background-color: $hsl_aqua;   }
	 80% { background-color: $hsl_cyan;   }
	100% { background-color: $hsl_navy;   }
}
@keyframes animVHSwipe {
	  0% { opacity: 0; transform: translate3d(-1rem,0,0);  }
	100% { opacity: 1; transform: translate3d(0,0,0); }
}

/*

@keyframes animRbow_bg {
	  0% { background-color: $hsl_red;    }
	 20% { background-color: $hsl_orange; }
	 40% { background-color: $hsl_yellow; }
	 60% { background-color: $hsl_aqua;   }
	 80% { background-color: $hsl_cyan;   }
	100% { background-color: $hsl_red;    }
}

@keyframes animRbow2Navy_fill {

	  0% { fill: $hsl_red;    }
	 20% { fill: $hsl_orange; }
	 40% { fill: $hsl_yellow; }
	 60% { fill: $hsl_aqua;   }
	 80% { fill: $hsl_cyan;   }
	100% { fill: $hsl_navy;   }

	  0% { fill: $hsl_red;    }
	 10% { fill: $hsl_orange; }
	 23% { fill: $hsl_yellow; }
	 80% { fill: $hsl_aqua;   }
	 91% { fill: $hsl_cyan;   }
	100% { fill: $hsl_navy;   }

}

@keyframes animHide {
	0%   { opacity: 1; left: 0; }
	99%  { opacity: 0; left: 0; }
	100% { opacity: 0; left: -200%; }
}

@keyframes animShake {
	0%, 100% { transform: translate3d(0,0,0); }
	10%, 30%, 50%, 70%, 90% { transform: translate3d(-1rem,0,0); }
	20%, 40%, 60%, 80% { transform: translate3d(1rem,0,0); }
}
.animate_shake {
	animation: animShake 0.7s ease-in-out both;
}

*/